

src裡的檔案夾
- components 放共用的組件如 header, footer
- global 放另外寫的 js 小工具或是常數
- pages 放每個頁面
-- Home 首頁，每個頁面設一個資料夾
--- index.js 每一頁都有一個 js 檔案
---- components 資料夾，放置和此頁面Home有關的元件。

寫組件--> 宣告一個 function，並記得要在頁面內將這個函式 export 出去

```javascript
// Home
const Home = () => {

}
export default Home
```
JS 如何辨別一般的JS函式還是React元件，重點在React元件會以 return 將 html(jsx) 回傳回去，即為元件。

## 如何切分元件
以備忘錄來說，上面有編輯區可編輯內容，下面有顯示區，顯示一條條的備忘錄。所元件可以此邏輯來切。

切版時思考元件如何切，也同時需思考元件的狀態該如何區分

Home (state) 狀態，可共享data，讓子元件可共享這個data狀態
  /    \ （props） 從父傳入資料到子元件
Edit  List
        ＼
        Item

## useState 使用方法
useState :控制元件的狀態
共享狀態需引入 react 的 hooks : useState
`import { useState } from 'react'`

以 useState 的方式去宣告變數，React 才能自動渲染，
```javascript
const [a(變數名), setA(方法)] = useState(100)
function plus () {
  // 拿到上一次的值的方法
  setA(function(prev){
    return prev + 200
  })
}

return {a} <button onClick={plus}>Add</button>

```

## props

## 
每一個input 各別去綁定一個 useState 



## useEffect
當元件狀態(useState)或變數變動之後，要做什麼事情可透過useEffect來監聽執行。例如data有變動了，想出現一個小提示

1.先將useEffect引入：`import {useEffect} from 'react'`
2.在useEffect裡定義方法，這個方法在每一次執行的時候：做的事情。將希望作的效果綁定在一個元素上。
`useEffect([方法],[綁定的元素])`
以以下例子來說，當綁定的元素資料有變動時，第一個參數的方法就會被執行一次。這樣一旦資料被更改或變動，就會去執行useEffect的方法。
```javascript
useEffect(()=>{
  // 綁定的事情
  window.alert("Added successfully")
  return ()=>{
    // 取消綁定
    ​removeEventListener(type, listener[, options])
  }
},[data])
```
在第一次渲染頁面時 useEffect()也會自行執行第一次，

useEffect() 也可回傳一個函式，外層函式是資料變動時所做的事情，回傳的函式是每次渲染之前到下一次新的渲染之間所做的事情。例如：取消綁定

### useEffect 應用場景
- 隨著狀態去變動
- 清除狀態或事件
- 只希望執行一次（ex. 去後端拿資料，只會取一次）：不給第二參數（綁定依賴的元素資料）

注意：如果不給第二參數，表示每次渲染頁面時都會執行一次 useEffect()。小心不要落入無限迴圈。

### useEffect 可做的事
場景：在寫頁面通常會透過 API 讀入資料，這些資料在頁面渲染時會被匯入進來，



## 好用套件
### 自動排版 Prettier
安裝：`npm i prettier`
修改packag.json: 增加` "scripts": {
    "prettier": "prettier -w src/"
  },` 會自動監視 src 底下所有的檔案並自動排版。
執行：`npm run prettier`

### 自動產生唯一 key 值：uuid
安裝：npm i uuid
在要使用的地方引入： `import {v4} from 'uuid'`
在使用的地方加入此屬性`id: v4()` 即會自動產生

### Json-server 模擬後端 API 
[npm json-server](https://www.npmjs.com/package/json-server#alternative-port)
安裝：npm i json-server
在根目錄新增一個`db.json`，替代從後端讀取的 API 資料
修改packag.json: 增加` "scripts": {
    "server": "json-server --watch db.json"
  },` 會自動監視 src 底下所有的檔案並自動排版。
  執行：`npm run server`
  會根據設定的 json 檔案去啟動資料庫達到模擬效果。
  - 預設的port 為3000 會與react 重複，可在啟動時增加 port 參數來修改，但必須直接下啟動的指令時一併給參數。

  `json-server --watch db.json --port 3001`

## 將呼叫API寫的更簡潔
  使用方式:
  ```javascript
  fetch("http://localhost:3001/posts/1")
    .then(res => res.json()) // 回傳.json
    .then( data => { // 取出資料
      console.log(data)
    })
  ```

  ## 常數儲存在global
  在 `global`檔案夾裡建立一個名為 `constants.js`的檔案，專門放常用的常數，再引入來用，就可以讓程式碼更簡潔。

   ```javascript
   // global/constants
   export const API_HOST = "http://localhost:3001"
export const API_GET_DATA = `${API_HOST}/posts/1`

  // 呼叫API
  fetch(API_GET_DATA)
    .then(res => res.json()) // 回傳.json
    .then( data => { // 取出資料
      console.log(data)
    })
  ```
  如要更簡潔，可以將此部份提去出來寫成一個async 非同步的函式。

```javascript
async function fetchData() {
  const res = await fetch(API_GET_DATA) 
  const { data } = await res.json()
  console.log(data)
  return data
}
```
只要呼叫 `fetchData()`就可以取代之前寫在 fetch的部份了。





點擊<Item /> 標籤會自動開啟到 Item.js 的 componont 是因為有裝外掛嗎？怎麼辦到的。感謝～

沒有裝外掛唷，mac的話按著command鍵然後點Component就可以跳過去了，windows的話應該是control。